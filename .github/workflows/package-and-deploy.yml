name: Criar e publicar imagem Docker
on:
  push:
    branches: ['release']
env:
  REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}
  BRANCH_NAME: ${{ github.base_ref || github.ref_name }}
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: angular.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  download-and-execute-image:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker rm $(docker stop $(docker ps -a -q --filter ancestor=${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }}))
            docker rmi ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }}
            docker pull ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }}
            docker run --name ${{ github.event.repository.name }} -d ${{ secrets.CONTAINER_PORTS }} ${{ env.REGISTRY }}/${{ env.REPOSITORY_NAME }}:${{ env.BRANCH_NAME }} ${{ secrets.CONTAINER_ENVIRONMENT }}
